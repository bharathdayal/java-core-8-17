plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version '6.0.1.5171'
	id 'com.google.cloud.tools.jib' version '3.4.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

compileJava {
	options.compilerArgs += ['--enable-preview']
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-webflux' // For WebClient

	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation("io.micrometer:micrometer-registry-new-relic:1.15.2")
	//runtimeOnly("com.newrelic.agent.java:newrelic-api:8.22.0")


	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'com.google.guava:guava:33.0.0-jre'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootRun') {
	jvmArgs = [
			"-javaagent:${project.rootDir}/newrelic/newrelic.jar",
			"-Dnewrelic.config.app_name=my-local-app",
			"-Dnewrelic.config.license_key=E10109936DEC376ED6845C7ABD45518E7BF07D230C4FDDE725E8AB8DA4E0899",
			// optional: faster local startup sampling
			"-Dnewrelic.config.distributed_tracing.enabled=true"
	]
}
